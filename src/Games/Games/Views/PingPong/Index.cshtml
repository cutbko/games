@{
    var playerQrCodeUri = Url.Action("PlayerJoinQr", "PingPong", new {gameId = ViewBag.GameId}, Request.Url.Scheme);
}

@section header
{
    <header>
        <div class="container">
            <div class="col-md-4">
                <div id="player1Header">
                    <span id="player1Score">0</span>
                </div>
            </div>
            <div class="col-md-4">
                <div id="gameTitle">
                    <span>@ViewBag.GameName</span>
                </div>
            </div>
            <div class="col-md-4">
                <div id="player2Header">
                    <span id="player2Score">0</span>
                </div>
            </div>
        </div>
    </header>
}

<div id="gameArea">
    <canvas id="gameCanvas" width="0" height="0"></canvas>
</div>

@section scripts
{
    <script src="~/Scripts/require.js" data-main="@Url.Content("~/Scripts/Modules/pingPongFactory.js")"></script>
    <script>
        var serverSocketChannelUri = 'ws://@Request.Url.Host:@Request.Url.Port' + '@Url.HttpRouteUrl("DefaultApi", new { controller = "PingPongApi", action = "ConnectGame", gameId = ViewBag.GameId })';

        $(document).ready(function() {

            require(['pingPongFactory'], function(pingPongFactory) {
                window.pingPongGame = pingPongFactory.create('gameCanvas', '@playerQrCodeUri');

                resizeGame();
                window.addEventListener('resize', resizeGame, false);
                window.addEventListener('orientationchange', resizeGame, false);

                var ws = new WebSocket(serverSocketChannelUri);
                ws.onopen = function() {
                    console.log('open');
                };

                ws.onmessage = function(event) {
                    console.log(event.data);
                    var serverEvent = JSON.parse(event.data);
                    if (serverEvent.ActionType == 'Join') {
                        if (serverEvent.PlayerId == 1) {
                            pingPongGame.loginManager.player1Joined();
                        } else if (serverEvent.PlayerId == 2) {
                            pingPongGame.loginManager.player2Joined();
                        }
                    } else if (serverEvent.ActionType == 'Left') {
                        if (serverEvent.PlayerId == 1) {
                            pingPongGame.loginManager.player1Left();
                        } else if (serverEvent.PlayerId == 2) {
                            pingPongGame.loginManager.player1Left();
                        }
                    }
                };

                ws.onerror = function(event) {
                    console.log('error');
                    console.log(event);
                };
            });
        });

    function resizeGame() {

        var header = document.querySelector('header');
        var gameArea = document.getElementById('gameArea');
        var widthToHeight = 16 / 9;
        var newWidth = window.innerWidth;
        var newHeight = window.innerHeight - header.offsetHeight;
        var newWidthToHeight = newWidth / newHeight;

        if (newWidthToHeight > widthToHeight) {
            newWidth = newHeight * widthToHeight;
            gameArea.style.height = newHeight + 'px';
            gameArea.style.width = newWidth + 'px';
            gameArea.style.left = (window.innerWidth - newWidth) / 2 + "px";
        } else {
            newHeight = newWidth / widthToHeight;
            gameArea.style.width = newWidth + 'px';
            gameArea.style.height = newHeight + 'px';
            gameArea.style.left = "0px";
        }

        gameArea.style.top = header.offsetHeight + 'px';

        var gameCanvas = document.getElementById('gameCanvas');
        gameCanvas.width = newWidth;
        gameCanvas.height = newHeight;
    }
    </script>
}


